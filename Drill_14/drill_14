#include <iostream>
#include "std_lib_facilities.h"


struct beta
{
	virtual void pvf() = 0;
};

struct B1
{
	virtual void vf() { cout << "B1::vf()" << endl; }
	void f() { cout << "B1::f()" << endl; }
	virtual void pvf() { cout << "B1::pvf()" << endl;}
};


struct D1 : B1
{
	void vf() override { cout << "D1::vf()" << endl; }
	void f() { cout << "D1::f()" << endl; }
};

struct D2 : D1
{
	void pvf() override { cout << "D2::pvf()" << endl; }
};

struct B2
{
	virtual void pvf() = 0;
};

struct D21 : B2
{
	string s = "valami";
	void pvf() override { cout << s << '\n'; }
};

struct D22 : B2
{
	int i = 37;
	void pvf() override { cout << i << '\n'; }
};

void f (B2& b)
{
	b.pvf();
}


int main()
try{
	
	B1 b;
	b.vf();
	b.f();

	D1 d;
	d.vf();
	d.f();

	B1& r {d};
	r.vf();
	r.f();

	D2 dd;
	dd.vf();
	dd.f();
	dd.pvf();

	D21 s;
	D22 i;

	f(s);
	f(i);

}
catch(exception& e)
{
	cout << "Error: " << endl;
	return 1;
}
catch(...)
{
	cout << "Error: " << endl;
	return 2;
}
